!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -Wextra -c$/;"	m
CFLAGS	libft/Makefile	/^CFLAGS =	-Wall -Werror -Wextra -I. -c$/;"	m
FMT_TAB	include/ft_printf.h	22;"	d
FT_PRINTF_H	include/ft_printf.h	14;"	d
HEX_TAB	include/ft_printf.h	21;"	d
INCLUDES	Makefile	/^INCLUDES = -I.\/include$/;"	m
LIBFT	Makefile	/^LIBFT = .\/libft\/libft.a$/;"	m
LIBFT_H	libft/libft.h	14;"	d
NAME	Makefile	/^NAME = libftprintf.a$/;"	m
NAME	libft/Makefile	/^NAME =		libft.a$/;"	m
OBJS	Makefile	/^OBJS = $(SRCS:.c=.o)$/;"	m
OBJS	libft/Makefile	/^OBJS = 		$(SRCS:.c=.o)$/;"	m
SRCS	Makefile	/^SRCS =	srcs\/ft_printf.c \\$/;"	m
SRCS	libft/Makefile	/^SRCS =		ft_atoi.c \\$/;"	m
SURPL_O	Makefile	/^SURPL_O = ft_printf.o \\$/;"	m
c_val_control	srcs/c_control.c	/^void	c_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
curr_pos	include/ft_printf.h	/^	int			curr_pos;$/;"	m	struct:s_fmt
d_val_control	srcs/d_control.c	/^void	d_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
d_val_neg	srcs/d_control.c	/^void	d_val_neg(struct s_fmt *flag, int tmp_len, char *val_str)$/;"	f
d_val_neg_right	srcs/d_control.c	/^void	d_val_neg_right(struct s_fmt *flag, int tmp_len, char *val_str)$/;"	f
d_val_pos	srcs/d_control.c	/^void	d_val_pos(struct s_fmt *flag, int tmp_len, char *val_str)$/;"	f
fmt	include/ft_printf.h	/^	const char	*fmt;$/;"	m	struct:s_fmt
fmt_len	include/ft_printf.h	/^	int			fmt_len;$/;"	m	struct:s_fmt
free_it	srcs/misc.c	/^int	free_it(void **mem, int free_state)$/;"	f
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/;"	f
ft_checkneg	libft/ft_itoa.c	/^static void	ft_checkneg(int *n, int *intlen, char *str, int *i)$/;"	f	file:
ft_dtohex	srcs/misc.c	/^void	ft_dtohex(unsigned int num, int *rm_zeros, char cap, struct s_fmt *fg)$/;"	f
ft_expo	libft/ft_itoa.c	/^static int	ft_expo(int base, int expo)$/;"	f	file:
ft_expo	libft/ft_utoa.c	/^static unsigned int	ft_expo(unsigned int base, unsigned int expo)$/;"	f	file:
ft_intlen	libft/ft_itoa.c	/^static int	ft_intlen(int n)$/;"	f	file:
ft_intlen	libft/ft_utoa.c	/^static unsigned int	ft_intlen(unsigned int n)$/;"	f	file:
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/;"	f
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f
ft_memccpy	libft/ft_memccpy.c	/^void	*ft_memccpy(void *dst, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t n)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_t len)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/;"	f
ft_printf	srcs/ft_printf.c	/^int	ft_printf(const char *fmt, ...)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putnstr_fd	srcs/s_control.c	/^void	ft_putnstr_fd(char *s, int fd, int len)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size_t dstsize)$/;"	f
ft_strlen	libft/ft_strlen.c	/^int	ft_strlen(const char *s)$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t len)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s1, char const *set)$/;"	f
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f
ft_triage	srcs/triage.c	/^void	ft_triage(char c, va_list *ap, struct s_fmt *flag)$/;"	f
ft_triage_flags	srcs/triage.c	/^int	ft_triage_flags(struct s_fmt *s_flag, va_list *ap)$/;"	f
ft_triage_flags2	srcs/triage.c	/^void	ft_triage_flags2(struct s_fmt *s_flag, va_list *ap)$/;"	f
ft_triage_struct	srcs/triage.c	/^void	ft_triage_struct(va_list *ap, int *i, const char *fmt, int *ret)$/;"	f
ft_utoa	libft/ft_utoa.c	/^char	*ft_utoa(unsigned int n)$/;"	f
get_precision	srcs/flags_print.c	/^int	get_precision(struct s_fmt *s_flag, va_list *ap)$/;"	f
get_width	srcs/flags_print.c	/^int	get_width(struct s_fmt *s_flag)$/;"	f
int_val_control	srcs/u_control.c	/^void	int_val_control(char *val_str, struct s_fmt *flag)$/;"	f
is_member	libft/ft_strtrim.c	/^static int	is_member(char c, char const *set)$/;"	f	file:
is_percent	srcs/s_control.c	/^char	*is_percent(va_list *ap, struct s_fmt *flag)$/;"	f
left_justify	include/ft_printf.h	/^	int			left_justify;$/;"	m	struct:s_fmt
main	srcs/s_control.c	/^int	main(void)$/;"	f
max_len	libft/ft_strtrim.c	/^static int	max_len(char const *s1, char const *set)$/;"	f	file:
mod_strlen	srcs/misc.c	/^int	mod_strlen(const char *str)$/;"	f
p_val	srcs/p_control.c	/^void	p_val(unsigned char *buff, int i, struct s_fmt *flag)$/;"	f
p_val_control	srcs/p_control.c	/^void	p_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
p_val_left	srcs/p_control.c	/^void	p_val_left(void *val, struct s_fmt *flag, unsigned char *buff)$/;"	f
p_val_len	srcs/p_control.c	/^int	p_val_len(unsigned char *buff, int init_len)$/;"	f
pad_zero	include/ft_printf.h	/^	char		pad_zero;$/;"	m	struct:s_fmt
prec_on	include/ft_printf.h	/^	int			prec_on;$/;"	m	struct:s_fmt
precision	include/ft_printf.h	/^	int			precision;$/;"	m	struct:s_fmt
print_precision	srcs/flags_print.c	/^void	print_precision(struct s_fmt *flag)$/;"	f
ret	include/ft_printf.h	/^	int			*ret;$/;"	m	struct:s_fmt
s_fmt	include/ft_printf.h	/^struct s_fmt$/;"	s
s_val_control	srcs/s_control.c	/^void	s_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
split_it	libft/ft_split.c	/^static void	split_it(char **table, char const *s, char c)$/;"	f	file:
start	include/ft_printf.h	/^	int			start;$/;"	m	struct:s_fmt
str_alloc	libft/ft_split.c	/^static void	str_alloc(char **table, char const *s, char c)$/;"	f	file:
table_size	libft/ft_split.c	/^static int	table_size(char const *s, char c)$/;"	f	file:
to_pad	srcs/flags_print.c	/^void	to_pad(struct s_fmt *flag)$/;"	f
type	include/ft_printf.h	/^	char		type;$/;"	m	struct:s_fmt
u_val_control	srcs/u_control.c	/^void	u_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
width	include/ft_printf.h	/^	int			width;$/;"	m	struct:s_fmt
width_flag	srcs/triage.c	/^void	width_flag(struct s_fmt *s_flag)$/;"	f
x_val	srcs/x_control.c	/^void	x_val(char c, struct s_fmt *flag, unsigned int val)$/;"	f
x_val_control	srcs/x_control.c	/^void	x_val_control(va_list *ap, struct s_fmt *flag)$/;"	f
x_val_justify	srcs/x_control.c	/^void	x_val_justify(unsigned int val, struct s_fmt *flag, int cap, int i)$/;"	f
x_val_left	srcs/x_control.c	/^void	x_val_left(unsigned int val, struct s_fmt *flag, int cap, int rm_zeros)$/;"	f
x_val_len	srcs/x_control.c	/^int	x_val_len(unsigned int val)$/;"	f
