#!/bin/zsh

tabnum=1
OLDIFS=$IFS
nl=$'\n'

# Checking/installing CPROTO with Homebrew
brew ls --versions cproto > /dev/null 2>&1 || brew install cproto

# Check number of args
if [ $# -gt 2 ]
then
	target=$1
	shift
fi

# Check that first arg is .h
if [[ $target != *.h ]]
then
	echo "First argument must be a header file with extension '.h'."
	exit 11
fi

# Get cproto in variable $prot
for file in "$@"
do
	if [[ $file = *.c ]]
	then
		prot_list+="$(cproto $file 2> /dev/null)"
		prot_list+=$(printf "\n\r\t")
	fi
done

# String parsing
identify="/*	GENERATED PROTOTYPES (PROTOTYPICAL) 	*/"
identify_sed="\/\*	GENERATED PROTOTYPES (PROTOTYPICAL) 	\*\/"
if ! grep -q "GENERATED PROTOTYPES (PROTOTYPICAL)" "$target"
then
	sed -i '' "1,/^$/ s/^$/\n${identify_sed}\n/" $target
	grep -q "^$" $target
	if [[ $? != 0 ]]
	then
		echo "\n${identify}\n" >> $target
	fi
fi
counter=0
index=0

declare -A line_arr
while read line
do
	if [[ $line != *"/*"* ]] && [[ $line = *[^[:space:]]* ]] && ! [[ $line =~ '[[:space:]]+main\(' ]]
	then
		line=$(sed "s/ /\t/" <<< $line)
		if ! grep -Fq "$line" "$target"
		then
			sed -i '' "/GENERATED PROTOTYPES (PROTOTYPICAL)/a\\
${line}${nl}" $target
			(( counter=$counter + 1 ))
			line_arr[${index}]=$line
			(( index=$index + 1 ))
		fi
	fi
done <<< $prot_list

prim_col="\e[96m"
sec_col="\e[32m"
none_col="\e[0m"

line_num=$( grep -n "GENERATED PROTOTYPES (PROTOTYPICAL)" "$target" | grep -Eo "[[:digit:]]+" )
(( line_num=$line_num + 1 ))

if [ $counter -eq 1 ]
then
	echo "${prim_col}$counter prototype${none_col} was generated in ${prim_col}$target${none_col} on line ${line_num}:"
elif [ $counter -gt 1 ]
then
	echo "${prim_col}${counter} prototypes${none_col} were generated in ${prim_col}$target${none_col} on line ${line_num}:"
else
	echo "No prototypes were generated."
fi

if [ $counter -lt 9 ] && [ $counter -ne 0 ]
then
	for i in ${line_arr[@]}
	do
		echo "${sec_col}++ $i"
	done
elif [ $counter -gt 8 ]
then
	echo "${sec_col}++ ${line_arr[0]}"
	echo "	... ($(($counter - 2)))"
	echo "${sec_col}++ ${line_arr[$(($index - 1))]}"
fi
